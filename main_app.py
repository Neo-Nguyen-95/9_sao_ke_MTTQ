#%% LIBRARY
import os
import pandas as pd
import plotly.express as px
import numpy as np
import streamlit as st
pd.set_option('display.max_columns', None)

import plotly.graph_objects as go
from plotly.subplots import make_subplots

# for spyder display
# import plotly.io as pio
# pio.renderers.default='browser'

def format_number(number):
    format_number = f"{int(number):,}"
    format_number = format_number.replace(',', '.')
    return format_number

#%% I. WRANGLE DATA
def merge_lv1(folder_path):
    file_list = os.listdir(folder_path)
    files = [folder_path + '/' + file for file in file_list if 'Store' not in file]

    df = pd.DataFrame()
    for file in files:
        df_temp = pd.read_csv(file)
        df = pd.concat([df, df_temp], axis='rows')

    df['organization'] = folder_path.split('_')[1].lower()
    df['bank'] = folder_path.split('_')[2].lower()
    return df

def merge_lv2(folder_list):
    df = pd.DataFrame()
    for folder_path in folder_list:
        df_temp = merge_lv1(folder_path)
        df = pd.concat([df, df_temp], axis='rows')
    
    # clean money col
    df = df[df['money'].astype(int)>0]
    
    # drop index
    df = df.reset_index()
    df.drop(columns='index', inplace=True)
    
    # clean date col
    
    df['date'] = pd.to_datetime(df['date'], format='%d/%m/%Y').dt.date
    
    return df

folder_list = [
                'data_MTTQ TW_VCB_1.9_10.9', 
                'data_MTTQ TW_Vietin_10.9_12.9', 
                'data_MTTQ TW_BIDV_1.9_12.9',
                'data_MTTQ TW_VCB_11.9',
                'data_MTTQ TW_VCB_12.9',
                'data_MTTQ TW_VCB_13.9',
                'data_MTTQ TW_VCB_14.9',
                'data_MTTQ TW_Vietin_13.9_15.9',
                # 'data_MTTQ HN_Agribank_9.9_12.9',
               ]
df = merge_lv2(folder_list)

#%% II. APP
st.set_page_config(
    page_title = 'TH·ªêNG K√ä QUY√äN G√ìP M·∫∂T TR·∫¨N T·ªî QU·ªêC',
    page_icon = 'üí∞',
    layout = 'wide'
    )

st.title('TH·ªêNG K√ä QUY√äN G√ìP M·∫∂T TR·∫¨N T·ªî QU·ªêC')
st.markdown("""
            ## NGU·ªíN TH√îNG TIN:
            Th√¥ng tin ƒë∆∞·ª£c t√¥i t·ªïng h·ª£p (c·∫≠p nh·∫≠t ƒë·∫øn 16/09/2024) ƒë∆∞·ª£c l·∫•y t·ª´ c√°c
            t√†i li·ªáu ƒë∆∞·ª£c M·∫∑t Tr·∫≠n T·ªï Qu·ªëc c√¥ng b·ªë t·∫°i link b√™n d∆∞·ªõi:
         
            | STT | T·ªï ch·ª©c | T√†i kho·∫£n | Ng√†y | S·ªë l∆∞·ª£t sao k√™ |
            |:-:|:-:|:-:|:-:|:-:|
            |1|[MTTQ - Ban c·ª©u tr·ª£ trung ∆∞∆°ng](https://drive.google.com/file/d/18dIWiReYtJkyuQ_8vSBJWweGaD71rBpu/view)|VCB|1/9/2024-10/9/2024|200.364|
            |2|[MTTQ - Ban c·ª©u tr·ª£ trung ∆∞∆°ng](https://drive.google.com/file/d/1ffkLOPymobFQjlklgpjabeHK7TX1ic3B/view)|Vietin|10/9/2024-12/9/2024|60.490|
            |3|[MTTQ - Ban c·ª©u tr·ª£ trung ∆∞∆°ng](https://drive.google.com/file/d/15CcMvRMufl2v4_wtTD-qpL_lokjLo326/view)|BIDV|1/9/2024-12/9/2024|5.807|
            |4|[MTTQ - Ban c·ª©u tr·ª£ trung ∆∞∆°ng](https://drive.google.com/file/d/14B6AeTF2QPAqx3jbzVoPaxGxteqV_h61/view)|VCB|11/9/2024|294.553|
            |5|[MTTQ - Ban c·ª©u tr·ª£ trung ∆∞∆°ng](https://drive.google.com/file/d/145iywYGSaLCOwI4gqqW0dPPTTbz2v23i/view)|VCB|12/9/2024|294.205|
            |6|[MTTQ - Ban c·ª©u tr·ª£ trung ∆∞∆°ng](https://drive.google.com/file/d/1vF8CZjFKEG2LsVjJgIiHZfsKLqu1h6ZM/view)|VCB|13/9/2024|386.402|
            |7|[MTTQ - Ban c·ª©u tr·ª£ trung ∆∞∆°ng](https://drive.google.com/file/d/1l03pejKXnjVXGj9RSnNVKQp5KVylfW-7/view)|VCB|14/9/2024|205.112|
            |8|[MTTQ - Ban c·ª©u tr·ª£ trung ∆∞∆°ng](https://drive.google.com/file/d/119YkzrpkYAC4J3TYZYpvSX95yo-0OzP6/view)|Vietin|13/9/2024-15/9/2024|99.343|
            """)   
#%% 2.1 EDA

st.markdown("""
            ## I. TH·ªêNG K√ä
            """)

col_money, col_top10 = st.columns(2)
with col_money:
    total_money = format_number(df['money'].sum())
    
    st.write('T·ªïng s·ªë ti·ªÅn t·ª´ c√°c t√†i kho·∫£n quy√™n g√≥p:')
    st.markdown(f"""
                <div style="background-color: #EDF4F2; border-radius: 10px; padding: 5px">
                <h1 style="font-size: 36px; color: #2F3C7E; text-align: center"> 
                {total_money} VND
                </h1>
                </div>
                """,
                unsafe_allow_html=True)
    
    total_donate_time = format_number(len(df))
    
    st.write('T·ªïng l∆∞·ª£t quy√™n g√≥p (ƒë√£ lo·∫°i tr·ª´ nh·ªØng kho·∫£n giao d·ªãch 0 VND):')
    st.markdown(f"""
                <div style="background-color: #EDF4F2; border-radius: 10px; padding: 5px">
                <h1 style="font-size: 36px; color: #2F3C7E; text-align: center"> 
                {total_donate_time} l∆∞·ª£t
                </h1>
                </div>
                """,
                unsafe_allow_html=True)
    
    st.write('S·ªë ti·ªÅn quy√™n g√≥p giao ƒë·ªông trong kho·∫£ng:')
    min_donate = format_number(df['money'].min())
    max_donate = format_number(df['money'].max())
    st.markdown(f"""
                <div style="background-color: #EDF4F2; border-radius: 10px; padding: 5px">
                <h1 style="font-size: 36px; color: #2F3C7E; text-align: center"> 
                T·ª´ {min_donate} VND ƒë·∫øn {max_donate} VND
                </h1>
                </div>
                """,
                unsafe_allow_html=True)
    
    money_array = np.array(df['money'])
    quantile_25 = format_number(np.quantile(money_array, .25))
    quantile_75 = format_number(np.quantile(money_array, .75))
    median = format_number(np.quantile(money_array, .5))
    
    
    st.write('Trong ƒë√≥:')
    st.markdown(f"""
                | 25% quantile | 50% quantile(median - trung v·ªã) | 75% quantile| 
                |:-:|:-:|:-:|
                |{quantile_25}| {median}| {quantile_75}| 
                """)
    
with col_top10:
    st.write('Top 10 c√° nh√¢n/t·∫≠p th·ªÉ h·∫£o t√¢m:')
    top_10_index = df['money'].sort_values(ascending=False)[:10].index
    df_top10 = df.iloc[top_10_index, 1:]
    df_top10 = df_top10.reset_index(drop=True)
    st.write(df_top10)
    
  

col_money_hist, col_donate_count = st.columns(2)
with col_money_hist:    
    
    money_array = np.array(df['money'])
    upper = np.quantile(money_array, 0.9)

    fig = px.histogram(df['money'][df['money'] < upper],
                        nbins=40
                        )
    fig.update_layout(xaxis_title='S·ªë ti·ªÅn [VND]',
                      yaxis_title='S·ªë l∆∞·ª£t',
                      title_text = 'Ph√¢n b·ªë 90% quy√™n g√≥p',
                      showlegend=False)
    st.plotly_chart(fig)
    
    st.write('Bi·ªÉu ƒë·ªì th·ªÉ hi·ªán ph√¢n b·ªë c·ªßa 90% s·ªë ti·ªÅn quy√™n g√≥p, \
             10% c√≤n l·∫°i qu√° l·ªõn b·∫°n ƒë·ªçc c√≥ th·ªÉ xem trong b·∫£ng k√™ ·ªü ph·∫ßn sau')
             
    
with col_donate_count:
    # log total donate histogram
    fig = px.histogram(np.log10(df['money']), nbins=80)
    fig.update_layout(xaxis_title='Log10(S·ªë ti·ªÅn) [VND]',
                      yaxis_title='S·ªë l∆∞·ª£t',
                      title_text = 'Ph√¢n b·ªë to√†n b·ªô quy√™n g√≥p v·ªõi gi√° tr·ªã Log10',
                      showlegend=False)
    st.plotly_chart(fig)


# mean daily
donate_mean = df['money'].groupby(df['date']).mean()
fig = px.line(x=donate_mean.index, y=donate_mean.values, markers=True)
fig.update_layout(
    xaxis=dict(tickformat="%d-%m"),
    xaxis_title='Ng√†y',
    yaxis_title='S·ªë ti·ªÅn trung b√¨nh/l·∫ßn [VND]',
    title_text = 'S·ªë ti·ªÅn quy√™n g√≥p trung b√¨nh m·ªói ng√†y',
    showlegend=False,
    )

st.plotly_chart(fig)
    
# donate each day
donate_count = df.groupby('date').count()
donate_amount = df['money'].groupby(df['date']).sum()

fig = make_subplots(specs=[[{"secondary_y": True}]])

fig.add_trace(
    go.Scatter(x=donate_count.index, y=donate_count['money'], 
               mode='lines+markers', name='S·ªë l∆∞·ª£t quy√™n g√≥p'), 
    secondary_y=False)

fig.add_trace(
    go.Scatter(x=donate_amount.index, y=donate_amount.values, 
               mode='lines+markers', name='S·ªë ti·ªÅn quy√™n g√≥p'), 
    secondary_y=True)

fig.update_layout(
    xaxis=dict(
        tickformat="%d-%m"
        ),
    xaxis_title = 'Ng√†y quy√™n g√≥p',
    title_text = 'Th·ªëng k√™ quy√™n g√≥p m·ªói ng√†y',
    legend=dict(
        orientation='h',
        yanchor='bottom',
        y=-0.35,
        xanchor='center',
        x=0.5,
        )
    )

fig.update_yaxes(title_text="S·ªë l∆∞·ª£t quy√™n g√≥p", 
                 secondary_y=False)
fig.update_yaxes(title_text="S·ªë ti·ªÅn quy√™n g√≥p", 
                 secondary_y=True)


st.plotly_chart(fig)

st.write('Bi·ªÉu ƒë·ªì th·ªÉ hi·ªán s·ªë l∆∞·ª£t quy√™n g√≥p qua t·ª´ng ng√†y')

#%% 2.2 Search tool
st.markdown("""
            ## II. SAO K√ä CHI TI·∫æT
            """)

col, buff, buff2 = st.columns([1, 1, 1])
search_term = col.text_input("Nh·∫≠p t·ª´ kh√≥a t√¨m ki·∫øm:")

if search_term:
    df_filter = df[df['content'].str.contains(search_term, case=False)]
    st.write("D·ªØ li·ªáu l·ªçc:")
    st.dataframe(df_filter, width=1200)
else:
    st.write("D·ªØ li·ªáu sao k√™:")
    df_show = df.head(10)
    st.dataframe(df_show, width=1200)

#%% DISCLAIMER
st.markdown("""
            <div style="text-align: center">
            
            
            ___
            
            
            </div>
            """,
            unsafe_allow_html=True)

col1, buff, col2 = st.columns([2, .5, 7])
col1.markdown("""
              ### About me:
              Hi there! I am Neo, a data enthusiast. It is great if you are intested in my work.
              Meet me at [Facebook](https://www.facebook.com/lun.cao), [LinkedIn](https://www.linkedin.com/in/viet-dung-nguyen-87809311a/)
              """)
col2.markdown("""
            ### Mi·ªÖn tr·ª´ tr√°ch nhi·ªám: 
            ƒê√¢y KH√îNG ph·∫£i trang th√¥ng tin c·ªßa m·ªôt t·ªï ch·ª©c c√≥ th·∫©m quy·ªÉn m√† l√† 
            s·∫£n ph·∫©m c·ªßa c√° nh√¢n, t√¥i KH√îNG ƒë·∫£m b·∫£o t√≠nh ch√≠nh x√°c ho√†n to√†n c·ªßa 
            th√¥ng tin ƒë∆∞·ª£c ƒë·ªÅ c·∫≠p. C√°c d·ªØ li·ªáu v√† ph√¢n t√≠ch trong ·ª©ng d·ª•ng n√†y 
            ƒë∆∞·ª£c t√¥i t·ªïng h·ª£p v√† ph√¢n t√≠ch. Ng∆∞·ªùi s·ª≠ d·ª•ng c√≥ tr√°ch nhi·ªám t·ª±
            ch·ªãu r·ªßi ro khi s·ª≠ d·ª•ng th√¥ng tin ƒë∆∞·ª£c cung c·∫•p tr√™n ·ª©ng d·ª•ng n√†y.
            T√¥i tuy√™n b·ªë mi·ªÖn tr·ª´ ho√†n to√†n tr√°ch nhi·ªám ƒë·ªëi v·ªõi c√°c l·ªói ho·∫∑c 
            thi·∫øu s√≥t trong c√°c th√¥ng tin. 
            """)

